[
["coordinate-reference-systems.html", "Chapter 3 Coordinate reference systems 3.1 Lesson Objectives", " Chapter 3 Coordinate reference systems 3.1 Lesson Objectives Describe and understand a CRS in R and components of a CRS A CRS is made up of several components: Coordinate system: The x,y grid that defines where your data lies in space Horizontal and vertical units: The units describing grid along the x,y and possibly z axes Datum: The modeled version of the shape of the earth Projection details: If projected, the mathematical equation used to flatten objects from round surface (earth) to flat surface (paper or screen) 3.1.1 Why you need to know about CRS working with spatial data in R: library(awra2020spatial) library(readr) library(sf) data(pnw) gages = read_csv(system.file(&quot;extdata/Gages_flowdata.csv&quot;, package = &quot;awra2020spatial&quot;)) gages_sf &lt;- gages %&gt;% st_as_sf(coords = c(&quot;LON_SITE&quot;, &quot;LAT_SITE&quot;), crs = 4269, remove = FALSE) %&gt;% dplyr::select(STATION_NM,LON_SITE, LAT_SITE) # Awesome, let&#39;s plot our gage data and state boundaries! plot(pnw$geometry, axes=TRUE) plot(gages_sf$geometry, col=&#39;red&#39;, add=TRUE) # um, what? There is no ‘on-the-fly’ projection in R - you need to make sure you specify the CRS of your objects, and CRS needs to match for any spatial operations or you’ll get an error spatialreference.org is your friend in R - chances are you will use it frequently working with spatial data in R. Useful rgdal package functions: projInfo(type=‘datum’) projInfo(type=‘ellps’) projInfo(type=‘proj’) "]
]
